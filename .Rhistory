setwd("~/Desktop")
filename <- "ImageEffectExercise_rawdata_1_2014-12-22-00-14-40-401.iqdat"
dat <- read.delim(filename)
#IMAGES processing
#----------------------------------------------------------------------------------------------
#First we create 2 datasets, one of all images and other of all rateimages
images_data <- subset (dat, trialcode == 'picneutral' | trialcode== 'picnegative', select = c("trialcode", "values.trialcurrenttime"))
#Create a single column dataset of trialnumbers and subtract 1 from it.
#Since rating occurs after stimuli, the trialnum of the rateimages is num+1. We are trying
#to combine ratings and images into a single row.This step is to keep their trialnumbers
# consistent for a single combined dataset.
ratesimages_data <- subset (dat, trialcode == 'rateimage')
responsesnum <- subset(ratesimages_data, select = c("trialnum"))
autocorrectresponses=data.frame(apply(responsesnum, 2, function(x) x-1))
#Create a dataset consisting of just responses, pictypes and latency.
responses1 <- subset(ratesimages_data, select = c("values.response1","values.currentpictype","latency"))
#Combine the above dataset with the udpated trialnumbers
responses2 <- cbind(autocorrectresponses,responses1)
#Combine all datasets to produce the 3 conditions and required values in each row.
responsesmerged <- cbind( responses2, images_data)
#3 conditions
lookneutral_data <-  subset (responsesmerged, trialcode == 'picneutral')
looknegative_data <- subset (responsesmerged, trialcode == 'picnegative' & values.currentpictype == 'look')
decnegative_data <- subset (responsesmerged, trialcode == 'picnegative' & values.currentpictype == 'decrease')
#write them to a file
write.csv(lookneutral_data, file = paste(gsub(".iqdat", "", filename),"lookneutral_data.csv", sep="_"), row.names = FALSE)
write.csv(looknegative_data, file = paste(gsub(".iqdat", "", filename),"looknegative_data.csv", sep="_"), row.names = FALSE)
write.csv(decnegative_data, file = paste(gsub(".iqdat", "", filename),"decnegative_data.csv", sep="_"), row.names = FALSE)
View(responsesmerged)
setwd('/Volumes/spl/spl/Sylvia/SLEEP/analyses/session2-CNI/')
#setwd('/Volumes/spl/Sylvia/SLEEP/analyses/session2-CNI/')
datapath <- '../../data/PILOT_08/'
filename <- list.files(path=datapath,pattern='.*.iqdat')
dat <- read.delim(sprintf('%s/%s',datapath,filename))
# -----------------------------------------------------------------------------------------------------
# picture reappraisal task
# -----------------------------------------------------------------------------------------------------
# only selecting trials from picture task (rows)
pdat <-  subset(dat,subset=dat$trialcode%in%c('looknegative','lookneutral','decnegative','rateimage'))
# only selecting relevant variables (columns)
pdat <-  pdat[,c('subject','trialcode','trialnum','values.currentpictype','values.response1','latency')]
# renaming for convenience
names(pdat) <-   c('subj','pic.instr','trialnum','instr.type2','response','latency')
# deriving picture type from trialcode
pdat$pic.type <- sub('(look|dec)(neutral|negative)','\\2',pdat$pic.instr)
# carrying picture type information forward to one row below where rating was recorded
pdat$pic.type[seq(2,nrow(pdat),by=2)] <-  pdat$pic.type[seq(1,nrow(pdat),by=2)]
# deriving instructiont type form trialcode
pdat$instr.type <-   sub('(look|dec)(neutral|negative)','\\1',pdat$pic.instr)
# carrying instruction type information forward to one row below where rating was recorded
pdat$instr.type[seq(2,nrow(pdat),by=2)] <-  pdat$instr.type[seq(1,nrow(pdat),by=2)]
# saving picture x instruction information in external variable
pic.instr <-  pdat$pic.instr[seq(1,nrow(pdat),by=2)]
# selecting only rating trials from pdata
pdat <-  subset(pdat,subset=pdat$pic.instr=='rateimage')
# writing back in picture x instruction information
pdat$pic.instr <-  pic.instr
rm(pic.instr)
# generating block number variable (currently not recorded but should be recorded in future)
pdat$blocknum <-    rep(1:3,each=nrow(pdat)/3)
# putting together final pdata frame in nice order of variables and making appropriate ones a factor
pdat <-  data.frame(subj=factor(pdat$subj),blocknum=factor(pdat$blocknum),trialnum=factor(pdat$trialnum),
pic.type=factor(pdat$pic.type),instr.type=factor(pdat$instr.type,levels=c('look','dec'),labels=c('look','decr')),
instr.type2=factor(pdat$instr.type2),
pic.instr=factor(pdat$pic.instr,levels=c('looknegative','decnegative','lookneutral'),labels=c('neg.look','neg.decr','neu.look')),
response=pdat$response,latency=pdat$latency)
# -1 signifies the user didn't respond with any value for the rating; setting to NA
pdat$response[which(pdat$response==-1)] <-   NA
save(pdat,file='data_out/picture_task_PILOT_08.RData')
rm(pdat)
# -----------------------------------------------------------------------------------------------------
# autobiographical reappraisal task
load("/Volumes/spl/spl/Sylvia/SLEEP/analyses/session2-CNI/data_out/picture_task_PILOT_08.RData")
View(pdat)
setwd('/Volumes/spl/spl/Sylvia/SLEEP/analyses/session2-CNI/')
#setwd('/Volumes/spl/Sylvia/SLEEP/analyses/session2-CNI/')
se <-   function (x, na.rm = TRUE){
sqrt(var(x, na.rm = na.rm)/length(x[complete.cases(x)]))
}
load('data_out/picture_task_PILOT_08.RData')
# quick data check -- all counts ok? #####################################################################
print('block number count')
print(table(pdat$blocknum))
print('trial number count')
print(table(pdat$trialnum))
print('picture type count')
print(table(pdat$pic.type))
print('instruction type count')
print(table(pdat$instr.type))
print('instruction type count (2)')
print(table(pdat$instr.type2)) # s.th. is wrong with values.currentpictype **************************************
print('picture x instruction type count')
print(table(pdat$pic.instr))
print(table(pdat$pic.type,pdat$instr.type))
# what does response = -1 signify? ***********************************************************************
# data analysis for individual subject
# how do we know that subject was emotionally responsive and understood reappraisal task?
print('M')
print(this.m <-    tapply(pdat$response,list(pdat$pic.instr),mean))
print('SD')
print(this.sd <-   tapply(pdat$response,list(pdat$pic.instr),sd))
print('SE')
print(this.se <-  tapply(pdat$response,list(pdat$pic.instr),se))
by.cond <-  data.frame(tapply(pdat$response,list(pdat$pic.instr),list))
m <-    barplot(unlist(by.cond),las=1,col=rep(c('blue','green','yellow'),each=nrow(by.cond)),names.arg='',main='PILOT_08')
legend('topright',fill=c('blue','green','yellow','purple'),legend=c(colnames(by.cond),'means'))
points(x=c(mean(c(m[12],m[13])),mean(c(m[36],m[37])),mean(c(m[60],m[61]))),y=c(this.m),col='purple',pch=19)
lines(x=c(mean(c(m[12],m[13])),mean(c(m[36],m[37])),mean(c(m[60],m[61]))),y=c(this.m),col='purple',type='b',pch=19,cex=2,lwd=2)
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
View(dat)
setwd("~/Desktop")
filename <- "ImageEffectExercise_rawdata_1_2014-12-22-00-14-40-401.iqdat"
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
nrow(dat)
View(dat)
columns <- grep("^S[0-9]+_ATT[0-9]+$",colnames(dat))
dat <- dat[,columns]
for (i in 1:ncol(dat)) {
print(colnames(dat)[i])
statement <- (dat[1,i])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(statement[1], file = "output.txt", append = TRUE)
}
for (i in 1:ncol(dat)) {
print(colnames(dat)[i])
statement <- (dat[1,i])
print(statement)
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(statement[1], file = "output.txt", append = TRUE)
}
statement <- (dat[1,i])
print(statement[1])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
print(statement[1][1])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(statement[1], file = "output.txt", append = TRUE)
}
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
nrow(dat)
columns <- grep("^S[0-9]+_ATT[0-9]+$",colnames(dat))
dat <- dat[,columns]
for (i in 1:ncol(dat)) {
print(colnames(dat)[i])
statement <- (dat[1,i])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(statement[1], file = "output.txt", append = TRUE)
}
for (i in 1:ncol(dat)) {
print(colnames(dat)[i])
statement <- (dat[1,i])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write( dat[1,3]), file = "output.txt", append = TRUE)
}
print(colnames(dat)[i])
statement <- (dat[1,i])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(dat[1,3]), file = "output.txt", append = TRUE)
}
for (i in 1:ncol(dat)) {
print(colnames(dat)[i])
statement <- (dat[1,i])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(rownames(dat)[i]), file = "output.txt", append = TRUE)
}
write(rownames(dat)[i], file = "output.txt", append = TRUE)
}
print(colnames(dat)[i])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(rownames(dat)[i], file = "output.txt", append=TRUE)
}
l
l
l
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
nrow(dat)
columns <- grep("^S[0-9]+_ATT[0-9]+$",colnames(dat))
dat <- dat[,columns]
for (i in 1:ncol(dat)) {
print(colnames(dat)[i])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(rownames(dat)[3], file = "output.txt", append=TRUE)
}
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
nrow(dat)
columns <- grep("^S[0-9]+_ATT[0-9]+$",colnames(dat))
dat <- dat[,columns]
for (i in 1:ncol(dat)) {
print(colnames(dat)[i])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(rownames(dat)[i], file = "output.txt", append=TRUE)
}
statement <- (dat[1,i])
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
nrow(dat)
columns <- grep("^S[0-9]+_ATT[0-9]+$",colnames(dat))
dat <- dat[,columns]
for (i in 1:ncol(dat)) {
print(colnames(dat)[i])
print(rownames(dat)[1])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(rownames(dat)[1], file = "output.txt", append=TRUE)
}
print(colnames(dat)[i])
print(dat[1,i])
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
nrow(dat)
columns <- grep("^S[0-9]+_ATT[0-9]+$",colnames(dat))
dat <- dat[,columns]
for (i in 1:ncol(dat)) {
print(colnames(dat)[i])
print(dat[1,i])
write(colnames(dat)[i], file = "output.txt", append=TRUE)
write(rownames(dat)[1], file = "output.txt", append=TRUE)
}
View(dat)
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
nrow(dat)
columns <- grep("^S[0-9]+_ATT[0-9]+$",colnames(dat))
dat <- dat[,columns]
View(dat)
colnames(dat)[1]
dat[1,1]
table(dat[1,1])
table(dat[1,2])
table(dat[1,2])
table(dat[1,2])
dat[1,1]
dat2<- table(dat[1,2])
dat2<- (dat[1,2])
for (i in 1:ncol(dat)) {
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
nrow(dat)
columns <- grep("^S[0-9]+_ATT[0-9]+$",colnames(dat))
dat <- dat[,columns]
colnames(dat)[1]
dat[1,1]
dat2<- data.frame(dat[1,2])
for (i in 1:ncol(dat)) {
dat2<- levels(dat[1,1])
for (i in 1:ncol(dat)) {
setwd('~/Desktop/SleepExercise/')
dat <-  read.delim('test2.csv')
dat <-  dat[2,]
nrow(dat)
columns <- grep("^S[0-9]+_ATT[0-9]+$",colnames(dat))
dat <- dat[,columns]
colnames(dat)[1]
dat[1,1]
dat2<- levels(dat[1,1])
print(dat2)
